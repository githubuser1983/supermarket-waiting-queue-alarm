version: '3.7'

volumes:
  postgres_data_local: {}
  postgres_backup_local: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
      - POSTGRES_USER=supermarket
      - USE_DOCKER=yes
      - DJANGO_SETTINGS_MODULE=config.settings
    ports:
      - "8000:8000"
    networks:
      - supermarket
    command: /start

  notebook:
    <<: *django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
        - DJANGO_ALLOW_ASYNC_UNSAFE=true
    ports:
      - "8889:8889"
    networks:
      - supermarket
    command: /start_notebook.sh

  postgres:
    build:
      context: .
      dockerfile: ./compose/local/postgres/Dockerfile
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - postgres_backup_local:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - supermarket

  redis:
    image: redis:5.0
    networks:
      - supermarket

  celeryworker:
    <<: *django
    image: supermarket_local_celeryworker
    depends_on:
      - redis
      - postgres

    ports: []
    networks:
      - supermarket
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: supermarket_local_celerybeat
    depends_on:
      - redis
      - postgres

    ports: []
    networks:
      - supermarket
    command: /start-celerybeat

  flower:
    <<: *django
    image: supermarket_local_flower
    ports:
      - "5555:5555"
    networks:
      - supermarket
    command: /start-flower

networks:
  supermarket:
    ipam:
      driver: default
      config:
        - subnet: "172.23.0.1/24"
